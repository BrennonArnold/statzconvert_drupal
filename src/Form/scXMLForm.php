<?php
/**
 * @file
 * Contains \Drupal\statzconvert\Form\scXMLForm
 */

namespace Drupal\statzconvert\Form;

use Drupal\Core\Database\Database;
use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;

/**
 * Class scXMLForm
 * @package Drupal\statzconvert\Form
 */
class scXMLForm extends FormBase {
    public function getFormId() {
        return 'scxml_form';
    }

    /**
     * {@inheritdoc}
     */
    public function buildForm(array $form, FormStateInterface $form_state)
    {
//        $node = \Drupal::routeMatch()->getParameter('node');
//        $nid = $node->id();
        //$nid = \Drupal::routeMatch()->getRawParameter('node');
        $gameid = random_int(1000, 9999);
        $select = Database::getConnection()->select('statzconvert_teamlist', 's');
        $select->addField('s', 'id');
        $select->addField('s', 'city');
        $select->orderBy('city');
        $results = $select->execute()->fetchAll(\PDO::FETCH_ASSOC);

        $teams = [];
        foreach ($results as $result) {
            $teams[$result['id']] = $result['city'];
        }

        //$form = parent::buildForm($form, $form_state);

        $form['chkempty4v'] = [
            '#type' => 'checkbox',
            '#title' => $this->t('Use Empty Dummy Team for Visitors'),
        ];

        $form['dbvteam'] = [
            '#type' => 'select',
            '#title' => 'Visitor Team (FoxBox)',
            '#options' => $teams,
            '#required' => TRUE,
        ];

        $form['dbhteam'] = [
            '#type' => 'select',
            '#title' => 'Home Team (FoxBox)',
            '#options' => $teams,
            '#required' => TRUE,
        ];

        $form['vteamid'] = [
            '#type' => 'textfield',
            '#title' => $this->t('Visitor Team ID'),
            '#required' => TRUE,
        ];

        $form['hteamid'] = [
            '#type' => 'textfield',
            '#title' => $this->t('Home Team ID'),
            '#required' => TRUE,
        ];

        $form['filvteamros'] = [
            '#type' => 'file',
            '#title' => t('Visitor Roster CSV File'),
        ];

        $form['filhteamros'] = [
            '#type' => 'file',
            '#title' => t('Home Roster CSV File'),
        ];

        $form['filvteamxml'] = [
            '#type' => 'file',
            '#title' => t('Visitor Stat File (XML StatCrew)'),
        ];

        $form['filhteamxml'] = [
            '#type' => 'file',
            '#title' => t('Home Stat File (XML StatCrew)'),
        ];

        $form['gameid'] = [
            '#type' => 'hidden',
            '#value' => $gameid,
        ];

        $form['actions'] = [
            '#type' => 'actions',
        ];

        $form['actions']['submit'] = [
            '#type' => 'submit',
            '#value' => t('Save'),
        ];

        $form['submit'] = [
            '#type' => 'submit',
            '#value' => $this->t('Convert'),
            '#attributes' => ['class' => ['btn btn-primary btn-block']],
        ];

        $form['#theme'] = 'scxmlutils';

        return $form;
    }

    public function validateForm(array &$form, FormStateInterface $form_state)
    {
        parent::validateForm($form, $form_state); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function submitForm(array &$form, FormStateInterface $form_state)
    {
        $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());

        \Drupal::database()->insert(('statzconvert'))
            ->fields([
                'uid' => $user->id(),
                'gameid' => $form_state->getValue('gameid'),
                'visid' => $form_state->getValue('vteamid'),
                'visdbid' => $form_state->getValue('dbvteam'),
                'homid' => $form_state->getValue('hteamid'),
                'homdbid' => $form_state->getValue('dbhteam'),
                'created' => time(),
            ])
            ->execute();

        drupal_set_message(t('Files converted successfully.'));
    }
}